name: Binary Release
run-name: Building binary godot-cpp release 🚀
on:
  push:
    branches:
      - '4.1'
      - '4.2'
jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 🐧 Linux (GCC)
            os: ubuntu-20.04
            build_type: Release

    env:
      SCCACHE_GHA_ENABLED: "true"

    steps:

    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache
        -G "Ninja"
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Archive
      uses: actions/upload-artifact@v4
      with:
        name: dist.${{ runner.os }}.${{ matrix.build_type }}
        path: |
            ${{ steps.strings.outputs.build-output-dir }}/bin
            ${{ steps.strings.outputs.build-output-dir }}/gen/
            !${{ steps.strings.outputs.build-output-dir }}/gen/src/
            ${{ github.workspace }}/
            ${{ github.workspace }}/gdextension/gdextension_interface.h

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: dist*
        merge-multiple: true
    - run: ls -R dist
    - name: Release archive
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist
